{"version":3,"sources":["components/TodoContext/index.js","components/TodoContext/useLocalStorage.js","components/TodoCounter/TodoCounter.js","components/TodoCreate/TodoCreate.js","components/TodoList/TodoList.js","components/TodoItem/TodoItem.js","components/TodoSearch/TodoSearch.js","media/img-task.svg","components/App/AppUI.js","components/App/index.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","localStorageItem","localStorage","getItem","useState","item","setItem","loading","setLoading","error","setError","useEffect","parsedItem","JSON","parse","stringify","newTodos","stringifedTodos","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","completedTodos","filter","completed","length","total","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","completeTodos","index","findIndex","deletTodo","deleted","addTodo","newTodo","push","children","TodoCounter","useContext","Fragment","className","TodoCreate","newTodoValue","setNewTodoValue","onSubmit","event","preventDefault","placeholder","onChange","target","type","TodoList","TodoItem","onClick","onComplete","icon","faCheckCircle","onDelete","faTimesCircle","TodoSearch","console","log","AppUI","src","image_task","alt","map","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d6a1971.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useLocalStorage } from \"./useLocalStorage\";\r\nconst TodoContext = React.createContext();\r\n\r\nfunction TodoProvider(props) {\r\n  const [todos, saveTodos, loading, error] = useLocalStorage(\"TODOS_V1\", []);\r\n  const [searchValue, setSearchValue] = React.useState(\"\");\r\n  const completedTodos = todos.filter((item) => item.completed === true);\r\n  const length = completedTodos.length;\r\n  const total = todos.length;\r\n  \r\n  let searchedTodos = [];\r\n\r\n  // Preguntamos si escribio algo el usuario\r\n  searchValue.length < 1\r\n    ? (searchedTodos = todos)\r\n    : // No entendí este codigo :C\r\n      (searchedTodos = todos.filter((item) => {\r\n        const todoText = item.text.toLowerCase();\r\n        const searchText = searchValue.toLowerCase();\r\n        return todoText.includes(searchText);\r\n      }));\r\n\r\n  const completeTodos = (text) => {\r\n    // 1 Encontramos la posicion del To Do\r\n    const index = todos.findIndex((item) => item.text === text);\r\n    // 2.-Cambiamos su estado de false a true\r\n    const newTodos = [...todos];\r\n\r\n    // Codigo para cambiar entre uno y otro\r\n    newTodos[index].completed === false\r\n      ? (newTodos[index].completed = true)\r\n      : (newTodos[index].completed = false);\r\n\r\n    // 3.-Agregamos el To Do actualizado al array de To DOs\r\n    saveTodos(newTodos);\r\n  };\r\n  const addTodo = (text) =>{\r\n    const newTodo = [...todos]\r\n\r\n    newTodo.push({\r\n      completed: false,\r\n      text\r\n    })\r\n    saveTodos(newTodo)\r\n  }\r\n  const deletTodo = (text) => {\r\n    const deleted = todos.filter((item) => item.text !== text);\r\n    saveTodos(deleted);\r\n  };\r\n  return (\r\n    <TodoContext.Provider\r\n      value={{\r\n        completedTodos,\r\n        todos,\r\n        searchedTodos,\r\n        completeTodos,\r\n        deletTodo,\r\n        length,\r\n        total,\r\n        searchValue,\r\n        setSearchValue,\r\n        loading,\r\n        error,\r\n        addTodo\r\n        \r\n      }}\r\n    >\r\n      {props.children}\r\n    </TodoContext.Provider>\r\n  );\r\n}\r\nexport { TodoContext, TodoProvider };\r\n","import React from \"react\";\r\n\r\nfunction useLocalStorage(itemName, initialValue) {\r\n  const localStorageItem = localStorage.getItem(itemName);\r\n  const [item, setItem] = React.useState(initialValue);\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [error, setError] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    try {\r\n      let parsedItem;\r\n      //1.- Cuando no hay informacion en localStorage\r\n      if (!localStorageItem) {\r\n        localStorage.setItem(itemName, JSON.stringify([]));\r\n        parsedItem = [];\r\n      } else {\r\n        //Si ya hay información, traerla del localStorage\r\n        parsedItem = JSON.parse(localStorageItem);\r\n      }\r\n      setItem(parsedItem);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(error);\r\n    }\r\n  },[]);\r\n\r\n  const saveItem = (newTodos) => {\r\n    const stringifedTodos = JSON.stringify(newTodos); // Castea los TODOs a string\r\n    localStorage.setItem(itemName, stringifedTodos);\r\n    setItem(newTodos);\r\n  };\r\n\r\n  return [item, saveItem, loading, error];\r\n}\r\n\r\nexport { useLocalStorage };\r\n","import React from \"react\";\r\nimport { TodoContext } from \"../TodoContext\";\r\nimport \"./TodoCounter.css\";\r\n\r\nfunction TodoCounter() {\r\n  const {total, length} = React.useContext(TodoContext)\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"TodoCounter-container\">\r\n        <h1 className=\"TodoCounter-h1\">Your Tasks</h1>\r\n        <h2 className=\"TodoCounter\">Completed {length} of {total} TODOs</h2>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n// Obliga a importar con el MISMO Nombre\r\nexport { TodoCounter };\r\n","import React from \"react\";\r\nimport \"./TodoCreate.css\";\r\nimport \"./CreateTodoButton.css\";\r\nimport { TodoContext } from \"../TodoContext\";\r\nfunction TodoCreate() {\r\n  const [newTodoValue, setNewTodoValue] = React.useState(\"\");\r\n  const { addTodo } = React.useContext(TodoContext);\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault(); // Evita recargar la pagina\r\n    addTodo(newTodoValue);\r\n    setNewTodoValue(\"\")\r\n  };\r\n  const onChange = (event) => {\r\n    setNewTodoValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"TodoSearch\">\r\n          <h1>Create New Task</h1>\r\n          <input\r\n            className=\"TodoInput\"\r\n            placeholder=\"Write a new Task\"\r\n            value={newTodoValue}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className=\"container-button\">\r\n          <button className=\"CreateTodoButton\" type=\"submit\">\r\n            Create Task\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport { TodoCreate };\r\n","import React from \"react\";\r\nimport \"./TodoList.css\";\r\n\r\nfunction TodoList(props) {\r\n  return (\r\n    <div className=\"TODOs\">\r\n      <ul className=\"TodoList\">{props.children}</ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { TodoList };\r\n","import React from \"react\";\r\nimport \"./TodoItem.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCheckCircle,\r\n  faTimesCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction TodoItem(props) {\r\n  return (\r\n    <li className=\"TodoItem\">\r\n      <span\r\n        className={`Icon Icon-check ${props.completed && \"Icon-check--active\"}`}\r\n        onClick={props.onComplete}\r\n      >\r\n        {/* El icono va fuera del SPAN */}\r\n        <FontAwesomeIcon icon={faCheckCircle} />\r\n      </span>\r\n      <p className={`TodoItem-p ${props.completed && \"TodoItem-p--complete\"}`}>\r\n        {props.text}\r\n      </p>\r\n      <span className=\"Icon Icon-delete\" onClick={props.onDelete}>\r\n        <FontAwesomeIcon icon={faTimesCircle} />\r\n      </span>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport { TodoItem };\r\n","import React from \"react\";\r\nimport \"./TodoSearch.css\";\r\nimport {TodoContext} from \"../TodoContext\"\r\nfunction TodoSearch() {\r\n\r\n  const {searchValue,setSearchValue} = React.useContext(TodoContext)\r\n\r\n  const onSearchValue = (event) =>{\r\n    console.log(event.target.value)\r\n    setSearchValue(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"TodoCreate\">\r\n        <input\r\n          className=\"TodoInput\"\r\n          placeholder=\"Search a Task\"\r\n          value={searchValue}\r\n          onChange={onSearchValue}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport { TodoSearch };\r\n","export default __webpack_public_path__ + \"static/media/img-task.556d6b0c.svg\";","import React from \"react\";\r\nimport { TodoCounter } from \"../TodoCounter/TodoCounter\";\r\nimport { TodoCreate } from \"../TodoCreate/TodoCreate\";\r\nimport { TodoList } from \"../TodoList/TodoList\";\r\nimport { TodoItem } from \"../TodoItem/TodoItem\";\r\nimport { TodoSearch } from \"../TodoSearch/TodoSearch\";\r\nimport { TodoContext } from \"../TodoContext\";\r\nimport image_task from \"../../media/img-task.svg\";\r\n\r\nfunction AppUI() {\r\n  const { error, loading, searchedTodos, completeTodos, deletTodo } =\r\n    React.useContext(TodoContext);\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"left\">\r\n        <TodoCreate />\r\n\r\n        <img className=\"TodoSearch-img\" src={image_task} alt=\"img\" />\r\n      </div>\r\n\r\n      <div className=\"right\">\r\n        <TodoCounter />\r\n        <TodoSearch />\r\n\r\n        <TodoList>\r\n          {loading && <p>Estamos Cargando...</p>}\r\n          {error && <p>Hubo un error...</p>}\r\n          {!loading && !searchedTodos.length && <p>¡Escribe tu primer TODO!</p>}\r\n\r\n          {/* Este mapa se está mandando como CHILDREN a TodoList */}\r\n          {searchedTodos.map((item) => (\r\n            <TodoItem\r\n              key={item.text}\r\n              text={item.text}\r\n              completed={item.completed}\r\n              // Le pasamos la funcion al Componente hijo, y este ejecuta la función, cada vez que hace un click\r\n              onComplete={() => completeTodos(item.text)}\r\n              onDelete={() => deletTodo(item.text)}\r\n            />\r\n          ))}\r\n        </TodoList>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { AppUI };\r\n","// import \"./App.css\";\nimport React from \"react\";\nimport { AppUI } from \"./AppUI\";\nimport { TodoProvider } from \"../TodoContext\";\nimport \"./index.css\";\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/index\";\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}